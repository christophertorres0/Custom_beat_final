# Welcome to my Song


use_bpm 160
use_synth :piano
#The array picks out different notes to play
array = [:g3, :e3, :c3]
kick = [:g4, :e4, :c4]
#The sample I used sounded chaotic so I liked it
audio = "C:/Users/christopher_torres/Desktop/audio (1).wav"
x = 2
define :thing do #Explain this
  sample audio
  sleep
end

1.times do
  sample audio
  sleep 20
end

live_loop :song do
  4.times do
    play :fb5, amp: x
    sleep 0.5
    play :db5, amp: x
    sleep 0.5
    play :ab4, amp: x 
    sleep 0.5
    play :db5, amp: x
    sleep 0.5
    x = 1 + 2
  end
end
sleep 10
live_loop :song do
  index = 0 #I have multiply index points, which at which number it will start from mine starts from (0) then goes 1234 and so forth
  
  play array
  sleep 0.5
  
  play array, sustain: 1
  sleep 1
  
  2.times do
    play array
    sleep 0.5
  end
  :r #Why?
  sleep 0.5
  
  play array
  sleep 0.5
  
  :r
  sleep 0.5
  
  play array
  sleep 0.5
  
  play array
  sleep 1
  
  2.times do
    play array
    sleep 0.5
    play :g3
    sleep 0.5
  end
  
  :r
  sleep 0.5
  live_loop :lit do
    sample audio
    sleep 16
  end
  
  live_loop :random do
    use_octave [0, 2].choose #Uses random notes and pulls certain notes to play in random order
    play [:c, :e, :g].choose
    sleep [0.25, 0.5, 1, 2].choose
  end
  
end

live_loop :kicker do
  index = 0
  
  sample :drum_heavy_kick
  sleep 0.5
  
  sample :drum_heavy_kick, sustain: 1
  sleep 1
  
  2.times do
    sample :drum_heavy_kick
    sleep 0.5
  end
  :r
  sleep 0.5
  
  sample :drum_heavy_kick
  sleep 0.5
  
  :r
  sleep 0.5
  
  sample :drum_heavy_kick
  sleep 0.5
  
  sample :drum_heavy_kick
  sleep 1
  
  2.times do
    sample :drum_heavy_kick
    sleep 0.5
    sample :drum_heavy_kick
    sleep 0.5
  end
  #R or rest gives the beats time to appear almost like sleep
  :r
  sleep 0.5
  
  
  live_loop :random2 do
    # assign a value to 'c' that will be used as the index value
    c = [:c2, :e2, :g2, :b2, :c3, :b2,]
    print c
    play c [rrand_i(0,7)]
    sleep 0.5
  end
  
end
